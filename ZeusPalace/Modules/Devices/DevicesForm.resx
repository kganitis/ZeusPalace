<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TvpictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCCRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAABJAD
        AAIAAAAUAAAAUJAEAAIAAAAUAAAAZJKRAAIAAAADMDAAAJKSAAIAAAADMDAAAAAAAAAyMDIzOjEwOjA2
        IDE5OjI2OjQxADIwMjM6MTA6MDYgMTk6MjY6NDEAAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoH
        BwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsN
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABtAIUD
        ASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
        AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEB
        AQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEI
        FEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
        anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzP/hbWvXEcsGi6SDErbhcJE0itntvcKow
        cfwnqeKz7mw8W+JAza1rcdra4O8GUttUnkAAqnAwMnNWIdD8V61O7j7ciueMRLaKe4bzJPmIx7elaNt8
        Hbi6x/aF5Bu53SOHu3YHqCJCE6ZH3TXxuvTQ+s6nHLpXhi3cxz3lxq80f/LG13AOcgHMcQGe3f8AGrye
        JLLR7fboui2+nO2AnnFYTJ7sq5fp1z7CvRLT4Z6PZqfON3fpj/VXE5WL67Iwq/mDV26utE8F2ZubiXTt
        CtsZM0jR24I7nPBNPl5nZ6hqtdjzlj4u8QK4htZ4l5G+OIWqdOSHlIZvThfcelSWfwtvLtkm1G+hgkHH
        V7qTj1LlVHrkL1ApdY/aM8G2byRabNfeJp042aPaNImfeRsKP1rz7xN+05rMDOllo+laCMfJLrd8JpQP
        XyYuc+xrqp4apL4Y2OadalH4pXPXrb4baQgC3AutRP8AclmKIMdAEj2jHsc1cvNR8O+CLQm4utL8PwKP
        4njgOPp1NfKd58VvGHjmR7eDXPEGsCQ4+y+HbL7JB6YL4LfiRRpvwa8Y6tMbhvD+m6MDy9zrlwbqYe5y
        W59iorr+qqP8Sdjn+s3/AIcLntms/tJeDrN5I9Oe/wDEd0pxs022Ypn/AH2wK8/8SftOa1l0stL03QEH
        8epT/aZv+/acVzl34B8NaOhj8V/Ef7Q6/wDMP0lginnptUMf/HRUNr4g+Hnh1WOheCZ9TnXlbrVuhI7g
        Pnn/AICK6IUKP2YuRhOtV+1JROe8QfEvxX8QrWW0j1jXNXnYrsh02DyLZTkZBROTxnrX0f8As3W+uaF8
        PUtfEPmQzR3EhgiuH3SJEcEBueOd2B714hqHxi8SXkYhsV0/QbUDAhtbYSn82IA/Ba6fwD4k8T+KvC9r
        MI/tEqO8Mt1NIEV2VvQdwCB0pYiMvZ2skgoSj7S922fTb+KLK1B3TqT7HNVl8d2kkwRW6+9eJDSdTZd2
        oaxDar3WLJ/nU1jqmi6PchnvJryYcY3ZFeVyLoempM9/s9biuI9wPfHWrI1BG6c141Y/EbMLiytDjdjL
        n2rd0zxDqN+QWZUB7KKwasbJ3PSbiYyKm1ZD1yUz7elFV9Hjlkt/mlYHjnOM8fSilGehbjc3pIx5j/7x
        P61EwGOlVPFfiLT/AAho1/rGqzm1060XzJ5gjPtBYKOFBJ5IH414X4i/a+0aHzE0Pw5qOpOvCzX8qWkZ
        99vzPj8Aa1p0Z1PgRhOrCn8bse8tIFYEjIByR2+lfJuvfs5+PNX8T6lfXt5ostu1w8i67q0huJGjLEr8
        jZWPAIG3A6cVn+IP2nfHWtbxaTab4fhP3VsbbzpR/wBtJc/otea67r2q+KpXk1vVb7V2Zt2L25Z0H0TO
        0fgK9bD4atTd7pfiebXxFGppZu3yPRb7wD4F0P8AdeK/ilPrE6cPp+jnEZ56BYw//stUYPFnw08Ksf8A
        hHvAcuqTx/6u51MqoJ9f3hY/korzmNFiXaiqg9FGKWu/2KfxSb/D8jg9tb4Ypfieg6l8dfFV0hi00af4
        etmGNlpB5rr9C/yj8FridX1jUvELO2rarqGqbv4bq4Yxj6IMKPyqpRWkacIfDEzlUnP4pMbDFHbriGNI
        R/0zUL/Kn0lFaGVktgrtfAWqanBpF1p+nDbGtwZS3oXUD/2WuKrT8P6lPaXVxDDM8IkRWbaeuCR/WufE
        R5qbOrDy5aiO9l0fUbv5ru8C5P8AE+al03T7C3ukD3PnPzwtYEchkA3yM575Oav6S6/bk+h/lXiu9j2F
        ud5o/l+RJ5a4Xf8A0r0Dw7CW2V55oB/0Vv8ArpivUPDMW6SMCuGodcT0/wAP2qtatuXPTtmitbwzbFrV
        +D26Ee/uKK5jdWsc78UPDreJPAfinS1QNJc6fcIgb+8FLD9QK/PBpDNiUkkyASc/7Qz/AFr9R5rZTdYc
        fIXIbPpnmvzR8Z6KfDfijVdJZSkljeXFsyn0SZ1X/wAcCn8a+iwMt4nhY1aKRiUUUV655IUUUUAFFFFA
        BRRRQAVJbv5Vwr9Dgr/X+lR1HM21oj/tY/Q1E1eLNKbtNHTWl0WUc1r6LLu1JB7GuVspjtFb+gSf8TSP
        6H+VePONkz2IvU9P8M5a0HHWb/CvX/CtvuuEHtXkXg1fMgiHY3Fe3+CbfdeLx2FeTU3PQjseu+F4NtvJ
        8m/he+PX3oq3oMYWF8tjpjt6+4orA0Evod0kmB/Ea+CP2ptAGi/GTXZuh1AxXu3/AH4lyf8AvpXr9A7m
        P96/Hc/zr41/bi0M23jDw3qwXi709rdm9WilY/8AoMq/lXsYKVqtjy8Ur0mfNFFFFfQHhhRRRQAUUUUA
        FFFFABVe94jRv7si/wA8f1qxUd0u63kH0P5EE/pSeqsVF2aZc05lmAEciuf9lga6LQVK6tFkdjwfpXnv
        gu8t9JvrlppETP7tdxGeGzXoOhXsd7rcEkTB0YHBBz68V5laLimepRnzWPXfAMfmfZ1/6bO36V718P7f
        ddM3ZeK8P+G0e6ReOFLn9RX0H8OLfdHI+Orda8Ke56y2PTtJjKxNtEueP9WqN9M7v6UUWsaeXh1VvTdn
        +lFc7WpqtizcL+8c443EfrXzd+29oQvPh/oOp7ebLUXid/RZIWI/8eiFfS1wv75/94/zryv9pzRV1n4E
        +KwV3Gyij1D6CKRWbH/Ad3516NGXLVi/M4qkeanJeR+clFPkjaGRkcbWU4INMr6g+bCiiigAooooAKKK
        KACkkXzIpEzjcpXP1FLSj3oA4PUlC6lPz/Hnp68133wqbddRKTn526fSuUurON76+aQZZULKG6Z5/wAK
        6r4U/NqUZPJ3nn8K5sR/DZ1Yf+Ij6b+F8BaCSQ+//oVfRPw1t9umh+m5jXgnwwhxozyf55Jr6O8BW/l6
        HbnHUZr5We59Gtjrrdcr0op8C/Kc80VncZbnj/fSD/aP86x/Eejx+IPD+r6XIoaO+sp7ZlI4O+Nl/qK3
        Z1xNJ/vH+dQ4MciuOSpDDj0ro2ehifkfMkkchWXPmjhs9QRwQfxBqOvdvH/7LHxDk8ceIJdI8ONdaVLq
        E81rP9rhUPG8jOpwXBH3uhFczefs0/E3T4xJP4P+XIHy6vBk57dOK+njXp2XvI+flRqXdkeX0V3998Cf
        H9gT5/hXyD6NqkJx+S1w2qWN5ourXWm3sEFteWrbZo2uwQhwD94Lg8EVpGpCfwu5nKnOOskQ0VNZ2r6h
        bzSWxjnEYyTHKMDn1NVJZp42P+gXO0HHQEn6DNXdEWZLRWe2rM0RljgLRh9mSwBz1xVuC21i7jDw6TMV
        xuDHGCPrmlzJbjUW9kS0qttYH05qOCw1q5mMMdipkC7tu7t2NbEPg3X514tEDA4ZfmJB/AVDqwW7NFRq
        S2icB4jVv7R4GO3X6EfoRXY/CWMteRtj+JjW5D8KdUvr0zXlkJUIXG2MgAhQvQ9en512egfD690yRfJ0
        8pgY+VQK4MRiYOLgjvw+HnGSnI9j+HNuV8MI3diB/n86+lvC1v5Oi2i4/gFeC+AdHnj0O0iaFlYvkjHS
        vo7SrfybGBR0CCvn5PU9noWo4yRwAfrRVy3hDKc/yorMZJcSRpcSBiB8xo2rIuVOfpXmvxS8RXWiSRyQ
        Ny0m081tfDvXp9YtT53p611sw6HTXFuCD/SvJ/iz8WPDfw2vrHTtandbq7hNzFEoUDYrbc5JHOe1exTK
        MH868d+N/wCzlp/xrvtK1O41e40m50uF7YeTEHWVHbdyMjkEH861pcjl+82M5uajeG55V4i/aM8GS2cs
        8CPqN1t/dWoniXznPAXO7j64rx3xNrvhrXby6nufhjp8Wozsskl1/wAJBEHLAhgSFbBzgAj0OK9L1j9i
        ewtoyp8V3TKvGPsaj3/v1xfij9mi10uzkabXpr1YlLKJLcA+/O72FenTlh4P3ZfmcFT2817yPMvEVuNY
        8UnWLDSbHQI+DJp9pqcBhkYA5JJbIzxwOOBTYdEuL6cLJe2dhY7clIb1ZJmb0L5Jx16c0t58O9Os5mjL
        SOAexx2/Gkh8C6XJApP2gMOuHGD1/wBniu+8baM4mnF6o0tH8E6XY2rqlxZymZwXhnuGkDYJIO3GM5r0
        Pwn4VXxNfz2MWoW0bWaQyTsiBh5coJQICAM4BznOMjGa8WuvAdusbyR3MigltqsoOB2FJNreo+EbqCGx
        utizWcDPhMA7VwO/ua56tPmV1LU6aVRp6rQ+vtD+GOkaVBttoozzl3Zwzu3qxPU/5Fb9v4DsJZo98ahM
        YZl7D1/D+pr5K0L4q65ZBQ0kc27n5gR/WvRPDPxj1aRo90UfDdmIrypwlHVnpRkpaI+mbH4a6YpUYUn8
        MVdsvCeiN5bokgSRyiM0JAZh1xxz0rG8F+ILid41cbkbB2k9K9FvIFsdP8LhQDvMshPTkjP9a42uY2u4
        iafoOl2VqgDIoz1ZSP6V0Ft5DIvlyqyEfKQeKwdTbba7QMDd6+1S6Kc6Hanp0/8AQq52bR1VzprdD820
        j8aKk01dxl5Pb+tFZ3RfKf/Z
</value>
  </data>
</root>